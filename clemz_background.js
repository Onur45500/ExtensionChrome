async function e(e,t){const r=await s(["prodUrl"]),o=await chrome.runtime.getManifest(),n=r.prodUrl;if(e){let e,r,i={user:{password:t.password}};try{e=await fetch(`${n}/api/sign_in`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json","User-email":t.email,"Extension-version":o.version},body:JSON.stringify(i)})}catch(e){return chrome.storage.local.set({globalUiMessage:{content:"<b>Problème de connexion (TLS1)</b><br>Clemz n'a pas réussi à se connecter à clemz.app<br>Si le problème persiste, contacte-moi à <b>clement@clemz.app</b>",type:"danger"}}),"NOK"}try{r=await e.json()}catch(e){return a({message:"error",origin:"code",uiMessage:"<b>Erreur de communication avec clemz.app</b><br>Si besoin, contactez moi à clement@clemz.app",showUiMessage:!0,devMessage:"error VB-SI - JSON error",backtrace:JSON.stringify(e,["message","arguments","type","name"]),showProgressUiError:!1}),"OK"}if("success"!=r.is_success)chrome.storage.local.set({globalUiMessage:{content:r.data.message_content,type:r.data.message_type}});else{let e=(await s(["userInfo"])).userInfo;if(e?.email&&t.email.toLowerCase()!=e.email.toLowerCase()){let e=(await chrome.storage.local.get(["prodUrl"])).prodUrl;await chrome.storage.local.clear(),await chrome.storage.local.set({prodUrl:e,mainList:[]})}delete t.password,autoMessageParams={firstMessage:"",secondMessage:"",excludedVinties:[]},t.authentication_token=r.data.token,t.profileUrl=r.data.profile_url,t.username=r.data.username,t.subscription=r.data.subscription,t.role=r.data.role,t.activeLogs=r.data.active_logs,t.repostLeft=r.data.repost_left,t.nextTopUp=r.data.next_top_up,t.maxRepostLeft=r.data.max_repost_left,t.maxViews=r.data.max_views,t.maxFavsPerRequest=r.data.max_favs_per_request,t.lastRequestFavs=r.data.last_request_favs,t.autoMessageAllowed=r.data.auto_message_allowed,t.autoMessageMaxDuration=r.data.auto_message_max_duration,t.autoMessageLeft=r.data.auto_message_left,t.autoMessageIncluded=r.data.auto_message_included,t.status=r.data.status,t.newTrialLaunchedToday=r.data.new_trial_launched_today,t.updatedAt=Date.now();let a=r.data.active_alerts_array;null!=r.data.auto_message_first&&(autoMessageParams.firstMessage=r.data.auto_message_first),null!=r.data.auto_message_second&&(autoMessageParams.secondMessage=r.data.auto_message_second),null!=r.data.auto_message_excluded_vinties&&(autoMessageParams.excludedVinties=r.data.auto_message_excluded_vinties.split(";")),await chrome.storage.local.remove("globalUiMessage"),await chrome.storage.local.set({loginStatus:!0,userInfo:t,activeAlertsArray:a,autoMessageParams:autoMessageParams,activeTabID:"homeTabLink",clipboardIndex:r.data.clipboards,clipboardUpdatedAt:Date.now()})}return"OK"}{const e=await s(["userInfo","globalUiMessage"]);t=e.userInfo;e.globalUiMessage;let r,o={};try{r=await fetch(`${n}/api/sign_out`,{method:"DELETE",headers:{Accept:"application/json","Content-Type":"application/json","User-email":t.email,"User-token":t.authentication_token},body:JSON.stringify(o)})}catch(e){return a({message:"error",origin:"code",uiMessage:"<b>Problème de connexion (TLS2)</b><br>Clemz n'a pas réussi à se connecter à clemz.app<br>Si le problème persiste, contacte-moi à <b>clement@clemz.app</b>",showUiMessage:!0,devMessage:"error VB-SO - code",backtrace:JSON.stringify(e,["message","arguments","type","name"]),showProgressUiError:!1}),"NOK"}await async function(){return new Promise((function(e,a){s(["userInfo"]).then((e=>{chrome.storage.local.set({loginStatus:!1,userInfo:{email:e.userInfo.email}})})),chrome.storage.local.remove(["globalUiMessage","progressUiMessage","activeTabID","activityUid","processName","clipboardIndex","clipboardUpdatedAt","smartDressingItems","stopShowingModals","lastGlobalAlertReadUid","readActivityAlertUidsArray","activityAlertShownCounters","miniVinzCoordinates"],(function(a){e(a)}))}))}(),await chrome.storage.local.set({loginStatus:!1});return"success"!=(await r.json()).is_success?chrome.storage.local.set({globalUiMessage:{content:"Déconnexion effectuée (malgré une erreur)",type:"danger",time:4e3}}):chrome.storage.local.set({globalUiMessage:{content:"Déconnexion réussie",type:"success",time:4e3}}),"OK"}}async function a(e){let a=await s(["progressUiMessage","activityUid"]),t=a.progressUiMessage,r=a.activityUid;if(e.activityUid&&(r=e.activityUid),e.showUiMessage&&chrome.storage.local.set({globalUiMessage:{content:`${e.uiMessage}`,type:"danger"}}),e.showProgressUiError){let a="refresh";e.progressFinishedButton&&(a=e.progressFinishedButton);let s=0;t?.currentIndex&&(s=t.currentIndex);let r=0;t?.totalIndex&&(r=t.totalIndex);let o="-erreur-";t?.articleName&&(o=t.articleName),chrome.storage.local.set({progressUiMessage:{currentIndex:s,totalIndex:r,stage:"XX Erreur XX",articleName:o,articleImageUrl:chrome.runtime.getURL("images/bot_sad.png"),showLoader:!1,processFinishedButton:a}})}await async function(e,a,t,r,o){const n=await s(["userInfo","prodUrl"]),i=await chrome.runtime.getManifest(),c=n.prodUrl,l=n.userInfo.authentication_token,u=n.userInfo.email,g={recorded_error:{activity_uid:e,message:a,backtrace:t,body:r,origin:o}};let d;try{d=await fetch(`${c}/api/recorded_errors`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json","User-email":u,"User-token":l,"Extension-version":i.version},body:JSON.stringify(g)})}catch(e){return"fail"}if(d.status<200||d.status>299)return chrome.storage.local.set({globalUiMessage:{content:"Erreur de com avec Clemz.app (erreur B-CE).<br>Contactez Clem => clement@clemz.app",type:"danger"}}),"fail";const m=await d.json();return"forbidden"==m.is_success?(chrome.storage.local.set({globalUiMessage:{content:"Erreur - veuillez vous reconnecter",type:"danger"},loginStatus:!1}),"fail"):"success"!=m.is_success?m.data&&m.data.message_content?(chrome.storage.local.set({globalUiMessage:{content:m.data.message_content,type:"danger"}}),"fail"):(chrome.storage.local.set({globalUiMessage:{content:"Erreur de com avec Clemz.app (erreur B-CE).<br>Contactez Clem => clement@clemz.app",type:"danger"}}),"fail"):"success"}(r,e.devMessage,e.backtrace,e.body,e.origin),"user"==e.origin&&chrome.storage.local.set({autoMessageON:!1})}async function t(e){await chrome.storage.local.remove("progressUiMessage"),await chrome.alarms.get("autoMessageCycle",(async function(e){await chrome.storage.local.set({autoMessageNextCycleDate:e.scheduledTime})}));let a=e;if(null==a){a=(await s(["autoMessageCurrentCycleTabId"])).autoMessageCurrentCycleTabId}return a&&chrome.tabs.remove(a),await chrome.storage.local.remove(["autoMessageCurrentCycleDate","autoMessageCurrentCycleTabId"]),!0}async function s(e){return new Promise((function(a,t){chrome.storage.local.get(e,(function(e){a(e)}))}))}async function r(e){return new Promise(((a,t)=>{setTimeout((function(){a("done")}),e)}))}chrome.runtime.onMessage.addListener((function(o,n,i){switch(o.message){case"error":a(o).then((e=>{i("ok")}));break;case"login":e(!0,o.userInfo).then((e=>{i(e)}));break;case"logout":e(!1,null).then((e=>{i(e),"OK"==e&&chrome.runtime.reload()}));break;case"autoMessageCycleOver":let c=null;o.fromTabToClose&&n.tab&&(c=n.tab.id),t(c).then((e=>{i(e)}));break;case"addViewsToSingleItem":try{(async function(e,t,s,o,n,i,c){let l=t+parseInt(c.toString().slice(-1));for(let t=0;t<l;t++){chrome.storage.local.set({progressUiMessage:{currentIndex:s,totalIndex:o,stage:`ajout des vues (${t}/${l})`,articleName:n,articleImageUrl:i,showLoader:!0}});try{fetch(e,{credentials:"omit",method:"HEAD"})}catch(e){return a({message:"error",origin:"code",uiMessage:"<b>Problème de connexion (AVTSI)</b><br>Clemz n'a pas réussi à communiquer avec Vinted",showUiMessage:!0,devMessage:"error VB-OIUTAV - code - fetch",backtrace:JSON.stringify(e,["message","arguments","type","name"]),showProgressUiError:!0}),"fail"}await r(100)}return"OK"})(o.url,o.viewCount,o.currentIndex,o.totalIndex,o.articleName,o.articleImageUrl,o.articleId).then((e=>{i(e)}))}catch(e){a({message:"error",origin:"code",uiMessage:"<b>Perte de connexion avec Vinted</b><br>Clemz n'a pas réussi à rajouter les vues",showUiMessage:!0,devMessage:"error VB-AVTSI - code - global",backtrace:JSON.stringify(e,["message","arguments","type","name"]),showProgressUiError:!0}).then((e=>{i("NOK")}))}break;case"addViewsToItemsArray":try{(async function(e){let t=0;for(let s of e){chrome.storage.local.set({progressUiMessage:{currentIndex:2,totalIndex:3,stage:`ajout des vues (${t}/${e.length})`,articleName:"Donner des favoris",articleImageUrl:chrome.runtime.getURL("images/bot_screen.png"),showLoader:!0}});try{fetch(s.url,{credentials:"omit",method:"HEAD"})}catch(e){return a({message:"error",origin:"code",uiMessage:"<b>Problème de connexion</b><br>Clemz n'a pas réussi à communiquer avec Vinted",showUiMessage:!0,devMessage:"error VB-AVTIA - code - fetch",backtrace:JSON.stringify(e,["message","arguments","type","name"]),showProgressUiError:!0}),"fail"}t++,await r(100)}return"OK"})(o.itemsArray).then((e=>{i(e)}))}catch(e){a({message:"error",origin:"code",uiMessage:"<b>Perte de connexion avec Vinted</b><br>Clemz n'a pas réussi à rajouter les vues",showUiMessage:!0,devMessage:"error VB-AVTIA - code - global",backtrace:JSON.stringify(e,["message","arguments","type","name"]),showProgressUiError:!0}).then((e=>{i("NOK")}))}break;case"autoMessageStart":(async function(e){let a=e.hostname,t=new Date,s=new Date(6e4*Math.ceil(t.getTime()/6e4));await chrome.alarms.create("autoMessageCycle",{when:s.getTime()+12e4,periodInMinutes:3}),await chrome.storage.local.set({autoMessageON:!0,hostname:a}),await chrome.storage.local.remove("progressUiMessage");let r,o=e.maxDuration;(o||0==o)&&(r=1e3*parseInt(o)*60*60+Date.now());return await chrome.alarms.get("autoMessageCycle",(async function(e){await chrome.storage.local.set({autoMessageNextCycleDate:e.scheduledTime,autoMessageMaxTime:r})})),!0})(o).then((e=>{i(e)}));break;case"checkStoredLog":(async function(){let e=await s(["storedLog","prodUrl","userInfo"]),t=e.storedLog,r=e.prodUrl;if(!e.userInfo)return;const o=e.userInfo.authentication_token,n=e.userInfo.email;if(t){const e={recorded_log:{activity_uid:t.activityUid,message_clear:t.messageClear,message_encrypted:t.messageEncrypted,category:"sent_on_restart",title:t.title}};let s;try{s=await fetch(`${r}/api/recorded_logs`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json","User-email":n,"User-token":o},body:JSON.stringify(e)})}catch(e){return}s.status<200||s.status>299?a({message:"error",origin:"vinz",uiMessage:"Erreur de com avec clemz.app (erreur VB-CSL)",devMessage:"VB-CSL - status fail",backtrace:JSON.stringify(s,["status","url","data","headers"]),showUiMessage:!1}):await chrome.storage.local.remove(["storedLog"])}})().then((e=>{i("ok")}))}return!0})),chrome.alarms.onAlarm.addListener((async function(e){if("autoMessageCycle"==e.name){let e=await s(["autoMessageON","autoMessageCurrentCycleTabId","hostname","userInfo","autoMessageMaxTime"]),a=e.hostname,r=e.userInfo,o=e.autoMessageON,n=e.autoMessageMaxTime,i=e.autoMessageCurrentCycleTabId;if(!o)return i&&t(i),void chrome.alarms.clearAll();if(n&&Date.now()>n)return chrome.storage.local.set({upgradeSubscriptionModalData:`<p class="text-center">⚠️Temps max de surveillance <br> des favoris : <span class="text-danger font-weight-bolder">${r.autoMessageMaxDuration}&nbspheures</span>.</p>`}),i&&t(i),chrome.storage.local.set({autoMessageON:!1}),void chrome.alarms.clearAll();!async function(e){let a=await s(["autoMessageON","autoMessageCurrentCycleDate","autoMessageCurrentCycleTabId"]),r=a.autoMessageON,o=a.autoMessageCurrentCycleDate,n=a.autoMessageCurrentCycleTabId;if(await chrome.alarms.get("autoMessageCycle",(function(e){chrome.storage.local.set({autoMessageNextCycleDate:e.scheduledTime})})),!r)return n&&t(n),void chrome.alarms.clearAll();if(o){if(!(Date.now()-o>42e4))return;t(n)}await chrome.tabs.query({url:["https://www.vinted.com/*","https://www.vinted.net/*","https://www.vinted.co.uk/*","https://www.vinted.at/*","https://www.vinted.be/*","https://www.vinted.cz/*","https://www.vinted.de/*","https://www.vinted.es/*","https://www.vinted.fr/*","https://www.vinted.lt/*","https://www.vinted.lu/*","https://www.vinted.pl/*","https://www.vinted.it/*","https://www.vinted.nl/*","https://www.vinted.pt/*"]},(function(e){if(!(e.length>0))return chrome.storage.local.set({autoMessageON:!1}),n&&t(n),void chrome.alarms.clearAll()}));let i=await async function(e){return new Promise(((a,t)=>{chrome.tabs.create({url:e,active:!1,selected:!1},(function(e){a(e)}))}))}(`https://${e}/autoMessage`);await chrome.storage.local.set({autoMessageCurrentCycleDate:Date.now(),autoMessageCurrentCycleTabId:i.id})}(a)}})),chrome.runtime.onInstalled.addListener((async e=>{"install"===e.reason&&chrome.tabs.create({url:"https://www.clemz.app/documentation/demarrage-rapide#utiliserClemzlapremirefois"})}));